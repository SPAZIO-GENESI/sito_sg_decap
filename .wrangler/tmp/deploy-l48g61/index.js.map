{
  "version": 3,
  "sources": ["../../../cloudflare/index.js"],
  "sourceRoot": "C:\\Users\\masca\\OneDrive\\Documenti\\HDEMIA\\spazio_genesi\\sito_sg_decap\\.wrangler\\tmp\\deploy-l48g61",
  "sourcesContent": ["export default {\r\n  async fetch(request) {\r\n    const url = new URL(request.url);\r\n    console.log(`Request: ${url.pathname}${url.search}`);\r\n\r\n    const CLIENT_ID = \"Ov23liHhBJ2OIvs4V06t\";\r\n    const CLIENT_SECRET = \"b12f5531c2dadc996a48c892b4dd271b632af6e8\";\r\n    const REDIRECT_URI = \"https://decap-oauth-proxy.it-e3f.workers.dev/callback\";\r\n    const ADMIN_URL = \"https://spazio-genesi.github.io/sito_sg_decap/admin/\";\r\n\r\n    if (url.pathname === \"/auth\") {\r\n      const state = crypto.randomUUID();\r\n      const scope = url.searchParams.get(\"scope\") || \"repo\";\r\n      \r\n      const authUrl = new URL(\"https://github.com/login/oauth/authorize\");\r\n      authUrl.searchParams.set(\"client_id\", CLIENT_ID);\r\n      authUrl.searchParams.set(\"redirect_uri\", REDIRECT_URI);\r\n      authUrl.searchParams.set(\"state\", state);\r\n      authUrl.searchParams.set(\"scope\", scope);\r\n\r\n      console.log(`Redirecting to GitHub: ${authUrl.toString()}`);\r\n      return Response.redirect(authUrl.toString(), 302);\r\n    }\r\n\r\n    if (url.pathname === \"/callback\") {\r\n      const code = url.searchParams.get(\"code\");\r\n      if (!code) return new Response(\"Missing authorization code\", { status: 400 });\r\n\r\n      console.log(\"Exchanging code for token...\");\r\n      const tokenResponse = await fetch(\"https://github.com/login/oauth/access_token\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Accept\": \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"User-Agent\": \"Decap-CMS-OAuth-Proxy\"\r\n        },\r\n        body: JSON.stringify({\r\n          client_id: CLIENT_ID,\r\n          client_secret: CLIENT_SECRET,\r\n          code,\r\n          redirect_uri: REDIRECT_URI\r\n        })\r\n      });\r\n\r\n      const tokenData = await tokenResponse.json();\r\n      console.log(\"Token data received:\", tokenData);\r\n\r\n      if (!tokenData.access_token) {\r\n        return new Response(`Authentication failed: ${tokenData.error_description || \"No access token\"}`, {\r\n          status: 401\r\n        });\r\n      }\r\n\r\n      // Build the final URL with proper hash fragments\r\n      const redirectUrl = new URL(ADMIN_URL);\r\n      redirectUrl.hash = `access_token=${tokenData.access_token}&token_type=${tokenData.token_type}&expires_in=${tokenData.expires_in || 3600}`;\r\n      \r\n      console.log(`Redirecting to CMS: ${redirectUrl.toString()}`);\r\n      return Response.redirect(redirectUrl.toString(), 302);\r\n    }\r\n\r\n    return new Response(\"Endpoint not found\", { status: 404 });\r\n  }\r\n};"],
  "mappings": ";AAAA,IAAO,gBAAQ;AAAA,EACb,MAAM,MAAM,SAAS;AACnB,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,YAAQ,IAAI,YAAY,IAAI,QAAQ,GAAG,IAAI,MAAM,EAAE;AAEnD,UAAM,YAAY;AAClB,UAAM,gBAAgB;AACtB,UAAM,eAAe;AACrB,UAAM,YAAY;AAElB,QAAI,IAAI,aAAa,SAAS;AAC5B,YAAM,QAAQ,OAAO,WAAW;AAChC,YAAM,QAAQ,IAAI,aAAa,IAAI,OAAO,KAAK;AAE/C,YAAM,UAAU,IAAI,IAAI,0CAA0C;AAClE,cAAQ,aAAa,IAAI,aAAa,SAAS;AAC/C,cAAQ,aAAa,IAAI,gBAAgB,YAAY;AACrD,cAAQ,aAAa,IAAI,SAAS,KAAK;AACvC,cAAQ,aAAa,IAAI,SAAS,KAAK;AAEvC,cAAQ,IAAI,0BAA0B,QAAQ,SAAS,CAAC,EAAE;AAC1D,aAAO,SAAS,SAAS,QAAQ,SAAS,GAAG,GAAG;AAAA,IAClD;AAEA,QAAI,IAAI,aAAa,aAAa;AAChC,YAAM,OAAO,IAAI,aAAa,IAAI,MAAM;AACxC,UAAI,CAAC,KAAM,QAAO,IAAI,SAAS,8BAA8B,EAAE,QAAQ,IAAI,CAAC;AAE5E,cAAQ,IAAI,8BAA8B;AAC1C,YAAM,gBAAgB,MAAM,MAAM,+CAA+C;AAAA,QAC/E,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,UAAU;AAAA,UACV,gBAAgB;AAAA,UAChB,cAAc;AAAA,QAChB;AAAA,QACA,MAAM,KAAK,UAAU;AAAA,UACnB,WAAW;AAAA,UACX,eAAe;AAAA,UACf;AAAA,UACA,cAAc;AAAA,QAChB,CAAC;AAAA,MACH,CAAC;AAED,YAAM,YAAY,MAAM,cAAc,KAAK;AAC3C,cAAQ,IAAI,wBAAwB,SAAS;AAE7C,UAAI,CAAC,UAAU,cAAc;AAC3B,eAAO,IAAI,SAAS,0BAA0B,UAAU,qBAAqB,iBAAiB,IAAI;AAAA,UAChG,QAAQ;AAAA,QACV,CAAC;AAAA,MACH;AAGA,YAAM,cAAc,IAAI,IAAI,SAAS;AACrC,kBAAY,OAAO,gBAAgB,UAAU,YAAY,eAAe,UAAU,UAAU,eAAe,UAAU,cAAc,IAAI;AAEvI,cAAQ,IAAI,uBAAuB,YAAY,SAAS,CAAC,EAAE;AAC3D,aAAO,SAAS,SAAS,YAAY,SAAS,GAAG,GAAG;AAAA,IACtD;AAEA,WAAO,IAAI,SAAS,sBAAsB,EAAE,QAAQ,IAAI,CAAC;AAAA,EAC3D;AACF;",
  "names": []
}
